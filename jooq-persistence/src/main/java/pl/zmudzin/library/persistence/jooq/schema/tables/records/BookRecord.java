/*
 * This file is generated by jOOQ.
 */
package pl.zmudzin.library.persistence.jooq.schema.tables.records;


import java.time.OffsetDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;

import pl.zmudzin.library.persistence.jooq.schema.tables.Book;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BookRecord extends UpdatableRecordImpl<BookRecord> implements Record7<UUID, String, String, OffsetDateTime, UUID, UUID, UUID> {

    private static final long serialVersionUID = 1403741015;

    /**
     * Setter for <code>public.book.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.book.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.book.title</code>.
     */
    public void setTitle(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.book.title</code>.
     */
    public String getTitle() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.book.description</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.book.description</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.book.publication_date</code>.
     */
    public void setPublicationDate(OffsetDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.book.publication_date</code>.
     */
    public OffsetDateTime getPublicationDate() {
        return (OffsetDateTime) get(3);
    }

    /**
     * Setter for <code>public.book.author_id</code>.
     */
    public void setAuthorId(UUID value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.book.author_id</code>.
     */
    public UUID getAuthorId() {
        return (UUID) get(4);
    }

    /**
     * Setter for <code>public.book.genre_id</code>.
     */
    public void setGenreId(UUID value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.book.genre_id</code>.
     */
    public UUID getGenreId() {
        return (UUID) get(5);
    }

    /**
     * Setter for <code>public.book.publisher_id</code>.
     */
    public void setPublisherId(UUID value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.book.publisher_id</code>.
     */
    public UUID getPublisherId() {
        return (UUID) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<UUID, String, String, OffsetDateTime, UUID, UUID, UUID> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<UUID, String, String, OffsetDateTime, UUID, UUID, UUID> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Book.BOOK.ID;
    }

    @Override
    public Field<String> field2() {
        return Book.BOOK.TITLE;
    }

    @Override
    public Field<String> field3() {
        return Book.BOOK.DESCRIPTION;
    }

    @Override
    public Field<OffsetDateTime> field4() {
        return Book.BOOK.PUBLICATION_DATE;
    }

    @Override
    public Field<UUID> field5() {
        return Book.BOOK.AUTHOR_ID;
    }

    @Override
    public Field<UUID> field6() {
        return Book.BOOK.GENRE_ID;
    }

    @Override
    public Field<UUID> field7() {
        return Book.BOOK.PUBLISHER_ID;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getTitle();
    }

    @Override
    public String component3() {
        return getDescription();
    }

    @Override
    public OffsetDateTime component4() {
        return getPublicationDate();
    }

    @Override
    public UUID component5() {
        return getAuthorId();
    }

    @Override
    public UUID component6() {
        return getGenreId();
    }

    @Override
    public UUID component7() {
        return getPublisherId();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getTitle();
    }

    @Override
    public String value3() {
        return getDescription();
    }

    @Override
    public OffsetDateTime value4() {
        return getPublicationDate();
    }

    @Override
    public UUID value5() {
        return getAuthorId();
    }

    @Override
    public UUID value6() {
        return getGenreId();
    }

    @Override
    public UUID value7() {
        return getPublisherId();
    }

    @Override
    public BookRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public BookRecord value2(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public BookRecord value3(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public BookRecord value4(OffsetDateTime value) {
        setPublicationDate(value);
        return this;
    }

    @Override
    public BookRecord value5(UUID value) {
        setAuthorId(value);
        return this;
    }

    @Override
    public BookRecord value6(UUID value) {
        setGenreId(value);
        return this;
    }

    @Override
    public BookRecord value7(UUID value) {
        setPublisherId(value);
        return this;
    }

    @Override
    public BookRecord values(UUID value1, String value2, String value3, OffsetDateTime value4, UUID value5, UUID value6, UUID value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BookRecord
     */
    public BookRecord() {
        super(Book.BOOK);
    }

    /**
     * Create a detached, initialised BookRecord
     */
    public BookRecord(UUID id, String title, String description, OffsetDateTime publicationDate, UUID authorId, UUID genreId, UUID publisherId) {
        super(Book.BOOK);

        set(0, id);
        set(1, title);
        set(2, description);
        set(3, publicationDate);
        set(4, authorId);
        set(5, genreId);
        set(6, publisherId);
    }
}
