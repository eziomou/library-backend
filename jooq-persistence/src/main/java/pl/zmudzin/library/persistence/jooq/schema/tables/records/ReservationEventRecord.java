/*
 * This file is generated by jOOQ.
 */
package pl.zmudzin.library.persistence.jooq.schema.tables.records;


import java.time.OffsetDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import pl.zmudzin.library.persistence.jooq.schema.tables.ReservationEvent;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReservationEventRecord extends UpdatableRecordImpl<ReservationEventRecord> implements Record4<UUID, UUID, String, OffsetDateTime> {

    private static final long serialVersionUID = 1385879032;

    /**
     * Setter for <code>public.reservation_event.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.reservation_event.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.reservation_event.reservation_id</code>.
     */
    public void setReservationId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.reservation_event.reservation_id</code>.
     */
    public UUID getReservationId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.reservation_event.reservation_status</code>.
     */
    public void setReservationStatus(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.reservation_event.reservation_status</code>.
     */
    public String getReservationStatus() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.reservation_event.occurrence_date</code>.
     */
    public void setOccurrenceDate(OffsetDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.reservation_event.occurrence_date</code>.
     */
    public OffsetDateTime getOccurrenceDate() {
        return (OffsetDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<UUID, UUID, String, OffsetDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<UUID, UUID, String, OffsetDateTime> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return ReservationEvent.RESERVATION_EVENT.ID;
    }

    @Override
    public Field<UUID> field2() {
        return ReservationEvent.RESERVATION_EVENT.RESERVATION_ID;
    }

    @Override
    public Field<String> field3() {
        return ReservationEvent.RESERVATION_EVENT.RESERVATION_STATUS;
    }

    @Override
    public Field<OffsetDateTime> field4() {
        return ReservationEvent.RESERVATION_EVENT.OCCURRENCE_DATE;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public UUID component2() {
        return getReservationId();
    }

    @Override
    public String component3() {
        return getReservationStatus();
    }

    @Override
    public OffsetDateTime component4() {
        return getOccurrenceDate();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public UUID value2() {
        return getReservationId();
    }

    @Override
    public String value3() {
        return getReservationStatus();
    }

    @Override
    public OffsetDateTime value4() {
        return getOccurrenceDate();
    }

    @Override
    public ReservationEventRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public ReservationEventRecord value2(UUID value) {
        setReservationId(value);
        return this;
    }

    @Override
    public ReservationEventRecord value3(String value) {
        setReservationStatus(value);
        return this;
    }

    @Override
    public ReservationEventRecord value4(OffsetDateTime value) {
        setOccurrenceDate(value);
        return this;
    }

    @Override
    public ReservationEventRecord values(UUID value1, UUID value2, String value3, OffsetDateTime value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ReservationEventRecord
     */
    public ReservationEventRecord() {
        super(ReservationEvent.RESERVATION_EVENT);
    }

    /**
     * Create a detached, initialised ReservationEventRecord
     */
    public ReservationEventRecord(UUID id, UUID reservationId, String reservationStatus, OffsetDateTime occurrenceDate) {
        super(ReservationEvent.RESERVATION_EVENT);

        set(0, id);
        set(1, reservationId);
        set(2, reservationStatus);
        set(3, occurrenceDate);
    }
}
