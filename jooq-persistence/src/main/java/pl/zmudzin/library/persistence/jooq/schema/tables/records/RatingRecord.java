/*
 * This file is generated by jOOQ.
 */
package pl.zmudzin.library.persistence.jooq.schema.tables.records;


import java.time.OffsetDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import pl.zmudzin.library.persistence.jooq.schema.tables.Rating;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RatingRecord extends UpdatableRecordImpl<RatingRecord> implements Record5<UUID, UUID, UUID, Integer, OffsetDateTime> {

    private static final long serialVersionUID = -1317810374;

    /**
     * Setter for <code>public.rating.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.rating.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.rating.member_id</code>.
     */
    public void setMemberId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.rating.member_id</code>.
     */
    public UUID getMemberId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.rating.book_id</code>.
     */
    public void setBookId(UUID value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.rating.book_id</code>.
     */
    public UUID getBookId() {
        return (UUID) get(2);
    }

    /**
     * Setter for <code>public.rating.value</code>.
     */
    public void setValue(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.rating.value</code>.
     */
    public Integer getValue() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.rating.rate_date</code>.
     */
    public void setRateDate(OffsetDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.rating.rate_date</code>.
     */
    public OffsetDateTime getRateDate() {
        return (OffsetDateTime) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<UUID, UUID, UUID, Integer, OffsetDateTime> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<UUID, UUID, UUID, Integer, OffsetDateTime> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Rating.RATING.ID;
    }

    @Override
    public Field<UUID> field2() {
        return Rating.RATING.MEMBER_ID;
    }

    @Override
    public Field<UUID> field3() {
        return Rating.RATING.BOOK_ID;
    }

    @Override
    public Field<Integer> field4() {
        return Rating.RATING.VALUE;
    }

    @Override
    public Field<OffsetDateTime> field5() {
        return Rating.RATING.RATE_DATE;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public UUID component2() {
        return getMemberId();
    }

    @Override
    public UUID component3() {
        return getBookId();
    }

    @Override
    public Integer component4() {
        return getValue();
    }

    @Override
    public OffsetDateTime component5() {
        return getRateDate();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public UUID value2() {
        return getMemberId();
    }

    @Override
    public UUID value3() {
        return getBookId();
    }

    @Override
    public Integer value4() {
        return getValue();
    }

    @Override
    public OffsetDateTime value5() {
        return getRateDate();
    }

    @Override
    public RatingRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public RatingRecord value2(UUID value) {
        setMemberId(value);
        return this;
    }

    @Override
    public RatingRecord value3(UUID value) {
        setBookId(value);
        return this;
    }

    @Override
    public RatingRecord value4(Integer value) {
        setValue(value);
        return this;
    }

    @Override
    public RatingRecord value5(OffsetDateTime value) {
        setRateDate(value);
        return this;
    }

    @Override
    public RatingRecord values(UUID value1, UUID value2, UUID value3, Integer value4, OffsetDateTime value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RatingRecord
     */
    public RatingRecord() {
        super(Rating.RATING);
    }

    /**
     * Create a detached, initialised RatingRecord
     */
    public RatingRecord(UUID id, UUID memberId, UUID bookId, Integer value, OffsetDateTime rateDate) {
        super(Rating.RATING);

        set(0, id);
        set(1, memberId);
        set(2, bookId);
        set(3, value);
        set(4, rateDate);
    }
}
